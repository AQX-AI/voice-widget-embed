(()=>{const e=document.getElementById("talk-button"),t=document.getElementById("status");document.getElementById("local-audio");let n=null,o=null,a=null;function r(e){t.textContent=e}e.addEventListener("click",(async()=>{if(a)await async function(e){e.stop()}(a),a=null,o&&o.readyState===WebSocket.OPEN&&o.close();else try{a=await async function(){try{const e=await navigator.mediaDevices.getUserMedia({audio:!0});try{return new MediaRecorder(e,{mimeType:"audio/webm"})}catch(t){try{return new MediaRecorder(e,{mimeType:"video/mp4"})}catch(e){return console.error({err1:t}),console.error({err2:e}),null}}}catch(e){throw console.error("Error accessing microphone:",e),e}}(),o=await(async()=>new Promise((async(e,o)=>{r("Connecting...");const a=window.apiKey;if(!a)return void(t.textContent="API key is required");await fetch("https://aqx-ai-call-server-dtdwhtb8fcb7g8b0.eastus-01.azurewebsites.net/validate-key",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({apiKey:a})}),await fetch("https://aqx-ai-call-server-dtdwhtb8fcb7g8b0.eastus-01.azurewebsites.net/web",{method:"POST",headers:{"Content-Type":"application/json"}});const s=window.agentId,c=(await fetch(`https://aqx-ai-call-server-dtdwhtb8fcb7g8b0.eastus-01.azurewebsites.net/change/scriptByAgent/${s}`,{method:"POST",headers:{"Content-Type":"application/json"}}),new WebSocket("wss://aqx-ai-call-server-dtdwhtb8fcb7g8b0.eastus-01.azurewebsites.net"));c.addEventListener("open",(()=>{console.log("Client: connected to server"),r("Connected");const t=JSON.stringify({event:"start"});c.send(t),e(c)})),c.onmessage=async e=>{console.log("Message received from server:",e.data);try{const t=JSON.parse(e.data);if("media"===t.event&&t.media.payload){const e=t.media.payload,o=window.atob(e),a=o.length,r=new Uint8Array(a);for(let e=0;e<a;e++)r[e]=o.charCodeAt(e);const s=r.buffer;n||(n=new(window.AudioContext||window.webkitAudioContext));const c=await n.decodeAudioData(s),i=n.createBufferSource();i.buffer=c,i.connect(n.destination),i.start()}}catch(e){console.error("Error handling WebSocket message:",e)}},c.addEventListener("close",(()=>{console.log("Client: disconnected from server"),r("Disconnected")})),c.addEventListener("error",(e=>{console.error("WebSocket error:",e),r("Disconnected"),o(e)}))})))(),await async function(e,t){return new Promise((n=>{e.onstart=()=>{console.log("Client: microphone opened"),document.body.classList.add("recording"),n()},e.onstop=()=>{console.log("Client: microphone closed"),document.body.classList.remove("recording")},e.ondataavailable=async e=>{if(console.log("Client: microphone data received"),e.data.size>0&&t.readyState===WebSocket.OPEN){const n=await e.data.arrayBuffer(),o=new Uint8Array(n),a=btoa(String.fromCharCode(...o)),r=JSON.stringify({event:"media",based:"web",media:{payload:a}});t.send(r)}},e.start(500)}))}(a,o)}catch(e){console.error("Error opening microphone or WebSocket:",e),r("Disconnected")}}))})();