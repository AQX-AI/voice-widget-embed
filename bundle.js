(()=>{const e=document.getElementById("talk-button"),t=document.getElementById("status");document.getElementById("local-audio");let o=null,n=null,r=null;function a(e){t.textContent=e}e.addEventListener("click",(async()=>{if(r)await async function(e){e.stop()}(r),r=null,n&&n.readyState===WebSocket.OPEN&&n.close();else try{r=await async function(){try{const e=await navigator.mediaDevices.getUserMedia({audio:!0});try{return new MediaRecorder(e,{mimeType:"audio/webm"})}catch(t){try{return new MediaRecorder(e,{mimeType:"video/mp4"})}catch(e){return console.error({err1:t}),console.error({err2:e}),null}}}catch(e){throw console.error("Error accessing microphone:",e),e}}(),n=await(async()=>new Promise((async(e,n)=>{a("Connecting...");const r=window.apiKey;if(!r)return void(t.textContent="API key is required");const c={id:window.agentId,kbId:window,kbId,key:r},i=await fetch("https://aqx-ai-call-server-dtdwhtb8fcb7g8b0.eastus-01.azurewebsites.net/web",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(c)}),s=await i.json(),d=new WebSocket(`wss://aqx-ai-call-server-dtdwhtb8fcb7g8b0.eastus-01.azurewebsites.net/?callId=${s.callId}`);d.addEventListener("open",(()=>{console.log("Client: connected to server"),a("Connected");const t=JSON.stringify({event:"start"});d.send(t),e(d)})),d.onmessage=async e=>{console.log("Message received from server:",e.data);try{const t=JSON.parse(e.data);if("media"===t.event&&t.media.payload){const e=t.media.payload,n=window.atob(e),r=n.length,a=new Uint8Array(r);for(let e=0;e<r;e++)a[e]=n.charCodeAt(e);const c=a.buffer;o||(o=new(window.AudioContext||window.webkitAudioContext));const i=await o.decodeAudioData(c),s=o.createBufferSource();s.buffer=i,s.connect(o.destination),s.start()}}catch(e){console.error("Error handling WebSocket message:",e)}},d.addEventListener("close",(()=>{console.log("Client: disconnected from server"),a("Disconnected")})),d.addEventListener("error",(e=>{console.error("WebSocket error:",e),a("Disconnected"),n(e)}))})))(),await async function(e,t){return new Promise((o=>{e.onstart=()=>{console.log("Client: microphone opened"),document.body.classList.add("recording"),o()},e.onstop=()=>{console.log("Client: microphone closed"),document.body.classList.remove("recording")},e.ondataavailable=async e=>{if(console.log("Client: microphone data received"),e.data.size>0&&t.readyState===WebSocket.OPEN){const o=await e.data.arrayBuffer(),n=new Uint8Array(o),r=btoa(String.fromCharCode(...n)),a=JSON.stringify({event:"media",based:"web",media:{payload:r}});t.send(a)}},e.start(500)}))}(r,n)}catch(e){console.error("Error opening microphone or WebSocket:",e),a("Disconnected")}}))})();